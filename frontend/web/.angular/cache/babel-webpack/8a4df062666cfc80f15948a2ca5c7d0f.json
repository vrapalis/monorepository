{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.debounceTime = void 0;\n\nvar async_1 = require(\"../scheduler/async\");\n\nvar lift_1 = require(\"../util/lift\");\n\nvar OperatorSubscriber_1 = require(\"./OperatorSubscriber\");\n\nfunction debounceTime(dueTime, scheduler) {\n  if (scheduler === void 0) {\n    scheduler = async_1.asyncScheduler;\n  }\n\n  return lift_1.operate(function (source, subscriber) {\n    var activeTask = null;\n    var lastValue = null;\n    var lastTime = null;\n\n    var emit = function () {\n      if (activeTask) {\n        activeTask.unsubscribe();\n        activeTask = null;\n        var value = lastValue;\n        lastValue = null;\n        subscriber.next(value);\n      }\n    };\n\n    function emitWhenIdle() {\n      var targetTime = lastTime + dueTime;\n      var now = scheduler.now();\n\n      if (now < targetTime) {\n        activeTask = this.schedule(undefined, targetTime - now);\n        subscriber.add(activeTask);\n        return;\n      }\n\n      emit();\n    }\n\n    source.subscribe(new OperatorSubscriber_1.OperatorSubscriber(subscriber, function (value) {\n      lastValue = value;\n      lastTime = scheduler.now();\n\n      if (!activeTask) {\n        activeTask = scheduler.schedule(emitWhenIdle, dueTime);\n        subscriber.add(activeTask);\n      }\n    }, function () {\n      emit();\n      subscriber.complete();\n    }, undefined, function () {\n      lastValue = activeTask = null;\n    }));\n  });\n}\n\nexports.debounceTime = debounceTime;","map":{"version":3,"sources":["/home/vitali/Workspace/vrapalis/monorepository/frontend/web/node_modules/rxjs/dist/cjs/internal/operators/debounceTime.js"],"names":["Object","defineProperty","exports","value","debounceTime","async_1","require","lift_1","OperatorSubscriber_1","dueTime","scheduler","asyncScheduler","operate","source","subscriber","activeTask","lastValue","lastTime","emit","unsubscribe","next","emitWhenIdle","targetTime","now","schedule","undefined","add","subscribe","OperatorSubscriber","complete"],"mappings":"AAAA;;AACAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAAEC,EAAAA,KAAK,EAAE;AAAT,CAA7C;AACAD,OAAO,CAACE,YAAR,GAAuB,KAAK,CAA5B;;AACA,IAAIC,OAAO,GAAGC,OAAO,CAAC,oBAAD,CAArB;;AACA,IAAIC,MAAM,GAAGD,OAAO,CAAC,cAAD,CAApB;;AACA,IAAIE,oBAAoB,GAAGF,OAAO,CAAC,sBAAD,CAAlC;;AACA,SAASF,YAAT,CAAsBK,OAAtB,EAA+BC,SAA/B,EAA0C;AACtC,MAAIA,SAAS,KAAK,KAAK,CAAvB,EAA0B;AAAEA,IAAAA,SAAS,GAAGL,OAAO,CAACM,cAApB;AAAqC;;AACjE,SAAOJ,MAAM,CAACK,OAAP,CAAe,UAAUC,MAAV,EAAkBC,UAAlB,EAA8B;AAChD,QAAIC,UAAU,GAAG,IAAjB;AACA,QAAIC,SAAS,GAAG,IAAhB;AACA,QAAIC,QAAQ,GAAG,IAAf;;AACA,QAAIC,IAAI,GAAG,YAAY;AACnB,UAAIH,UAAJ,EAAgB;AACZA,QAAAA,UAAU,CAACI,WAAX;AACAJ,QAAAA,UAAU,GAAG,IAAb;AACA,YAAIZ,KAAK,GAAGa,SAAZ;AACAA,QAAAA,SAAS,GAAG,IAAZ;AACAF,QAAAA,UAAU,CAACM,IAAX,CAAgBjB,KAAhB;AACH;AACJ,KARD;;AASA,aAASkB,YAAT,GAAwB;AACpB,UAAIC,UAAU,GAAGL,QAAQ,GAAGR,OAA5B;AACA,UAAIc,GAAG,GAAGb,SAAS,CAACa,GAAV,EAAV;;AACA,UAAIA,GAAG,GAAGD,UAAV,EAAsB;AAClBP,QAAAA,UAAU,GAAG,KAAKS,QAAL,CAAcC,SAAd,EAAyBH,UAAU,GAAGC,GAAtC,CAAb;AACAT,QAAAA,UAAU,CAACY,GAAX,CAAeX,UAAf;AACA;AACH;;AACDG,MAAAA,IAAI;AACP;;AACDL,IAAAA,MAAM,CAACc,SAAP,CAAiB,IAAInB,oBAAoB,CAACoB,kBAAzB,CAA4Cd,UAA5C,EAAwD,UAAUX,KAAV,EAAiB;AACtFa,MAAAA,SAAS,GAAGb,KAAZ;AACAc,MAAAA,QAAQ,GAAGP,SAAS,CAACa,GAAV,EAAX;;AACA,UAAI,CAACR,UAAL,EAAiB;AACbA,QAAAA,UAAU,GAAGL,SAAS,CAACc,QAAV,CAAmBH,YAAnB,EAAiCZ,OAAjC,CAAb;AACAK,QAAAA,UAAU,CAACY,GAAX,CAAeX,UAAf;AACH;AACJ,KAPgB,EAOd,YAAY;AACXG,MAAAA,IAAI;AACJJ,MAAAA,UAAU,CAACe,QAAX;AACH,KAVgB,EAUdJ,SAVc,EAUH,YAAY;AACtBT,MAAAA,SAAS,GAAGD,UAAU,GAAG,IAAzB;AACH,KAZgB,CAAjB;AAaH,GApCM,CAAP;AAqCH;;AACDb,OAAO,CAACE,YAAR,GAAuBA,YAAvB","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.debounceTime = void 0;\nvar async_1 = require(\"../scheduler/async\");\nvar lift_1 = require(\"../util/lift\");\nvar OperatorSubscriber_1 = require(\"./OperatorSubscriber\");\nfunction debounceTime(dueTime, scheduler) {\n    if (scheduler === void 0) { scheduler = async_1.asyncScheduler; }\n    return lift_1.operate(function (source, subscriber) {\n        var activeTask = null;\n        var lastValue = null;\n        var lastTime = null;\n        var emit = function () {\n            if (activeTask) {\n                activeTask.unsubscribe();\n                activeTask = null;\n                var value = lastValue;\n                lastValue = null;\n                subscriber.next(value);\n            }\n        };\n        function emitWhenIdle() {\n            var targetTime = lastTime + dueTime;\n            var now = scheduler.now();\n            if (now < targetTime) {\n                activeTask = this.schedule(undefined, targetTime - now);\n                subscriber.add(activeTask);\n                return;\n            }\n            emit();\n        }\n        source.subscribe(new OperatorSubscriber_1.OperatorSubscriber(subscriber, function (value) {\n            lastValue = value;\n            lastTime = scheduler.now();\n            if (!activeTask) {\n                activeTask = scheduler.schedule(emitWhenIdle, dueTime);\n                subscriber.add(activeTask);\n            }\n        }, function () {\n            emit();\n            subscriber.complete();\n        }, undefined, function () {\n            lastValue = activeTask = null;\n        }));\n    });\n}\nexports.debounceTime = debounceTime;\n"]},"metadata":{},"sourceType":"script"}