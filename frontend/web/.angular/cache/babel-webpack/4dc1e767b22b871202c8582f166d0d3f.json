{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.throttleTime = void 0;\n\nvar async_1 = require(\"../scheduler/async\");\n\nvar throttle_1 = require(\"./throttle\");\n\nvar timer_1 = require(\"../observable/timer\");\n\nfunction throttleTime(duration, scheduler, config) {\n  if (scheduler === void 0) {\n    scheduler = async_1.asyncScheduler;\n  }\n\n  if (config === void 0) {\n    config = throttle_1.defaultThrottleConfig;\n  }\n\n  var duration$ = timer_1.timer(duration, scheduler);\n  return throttle_1.throttle(function () {\n    return duration$;\n  }, config);\n}\n\nexports.throttleTime = throttleTime;","map":{"version":3,"sources":["/home/vitali/Workspace/vrapalis/monorepository/frontend/web/node_modules/rxjs/dist/cjs/internal/operators/throttleTime.js"],"names":["Object","defineProperty","exports","value","throttleTime","async_1","require","throttle_1","timer_1","duration","scheduler","config","asyncScheduler","defaultThrottleConfig","duration$","timer","throttle"],"mappings":"AAAA;;AACAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAAEC,EAAAA,KAAK,EAAE;AAAT,CAA7C;AACAD,OAAO,CAACE,YAAR,GAAuB,KAAK,CAA5B;;AACA,IAAIC,OAAO,GAAGC,OAAO,CAAC,oBAAD,CAArB;;AACA,IAAIC,UAAU,GAAGD,OAAO,CAAC,YAAD,CAAxB;;AACA,IAAIE,OAAO,GAAGF,OAAO,CAAC,qBAAD,CAArB;;AACA,SAASF,YAAT,CAAsBK,QAAtB,EAAgCC,SAAhC,EAA2CC,MAA3C,EAAmD;AAC/C,MAAID,SAAS,KAAK,KAAK,CAAvB,EAA0B;AAAEA,IAAAA,SAAS,GAAGL,OAAO,CAACO,cAApB;AAAqC;;AACjE,MAAID,MAAM,KAAK,KAAK,CAApB,EAAuB;AAAEA,IAAAA,MAAM,GAAGJ,UAAU,CAACM,qBAApB;AAA4C;;AACrE,MAAIC,SAAS,GAAGN,OAAO,CAACO,KAAR,CAAcN,QAAd,EAAwBC,SAAxB,CAAhB;AACA,SAAOH,UAAU,CAACS,QAAX,CAAoB,YAAY;AAAE,WAAOF,SAAP;AAAmB,GAArD,EAAuDH,MAAvD,CAAP;AACH;;AACDT,OAAO,CAACE,YAAR,GAAuBA,YAAvB","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.throttleTime = void 0;\nvar async_1 = require(\"../scheduler/async\");\nvar throttle_1 = require(\"./throttle\");\nvar timer_1 = require(\"../observable/timer\");\nfunction throttleTime(duration, scheduler, config) {\n    if (scheduler === void 0) { scheduler = async_1.asyncScheduler; }\n    if (config === void 0) { config = throttle_1.defaultThrottleConfig; }\n    var duration$ = timer_1.timer(duration, scheduler);\n    return throttle_1.throttle(function () { return duration$; }, config);\n}\nexports.throttleTime = throttleTime;\n"]},"metadata":{},"sourceType":"script"}